package domain.model;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class EnumDictionary {

	private int id;
	private int intKey;
	private String stringKey;
	private String value;
	private String enumName;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public int getIntKey() {
		return intKey;
	}
	public void setIntKey(int intKey) {
		this.intKey = intKey;
	}
	public String getStringKey() {
		return stringKey;
	}
	public void setStringKey(String stringKey) {
		this.stringKey = stringKey;
	}
	public String getValue() {
		return value;
	}
	public void setValue(String value) {
		this.value = value;
	}
	public String getEnumName() {
		return enumName;
	}
	public void setEnumName(String enumName) {
		this.enumName = enumName;
	}
private Connection connection;
	
	private String createTableSql = "CREATE TABLE EnumDictionary("
			+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
			+ "intkey INT bigint NOT NULL,"
			+ "stringKey VARCHAR(50)"
			+ "value VARCHAR(50),"
			+ "EnumName VARCHAR(50)"
			+ ")";
	private Statement createTable;
	
	public EnumDictionary(Connection connection) {
		this.connection = connection;
		
		try {
			createTable = connection.createStatement();
			
			boolean tableExists = false;
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("EnumDictionary")){
					tableExists=true;
					break;
				}
			}
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
				
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
}
