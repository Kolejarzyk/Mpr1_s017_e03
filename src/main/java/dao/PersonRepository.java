package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import domain.model.Person;

public class PersonRepository {

	private Connection connection;
	
	private String createTableSql = "CREATE TABLE person("
			+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
			+ "name VARCHAR(20),"
			+ "surname VARCHAR(50)"
			+ ")";
	
	private Statement createTable;
	
	
	private String insertSql = "INSERT INTO person(name,surname) VALUES(?,?)";
	private String deleteSql = "DELETE FROM Person WHERE id = ?";
	private String updateSql = "UPDATE PERSON set name=?, surname=? WHERE id=?";
	
	private PreparedStatement insert;
	private PreparedStatement delete;
	private PreparedStatement update;

	
	
	public PersonRepository(Connection connection) {
		this.connection = connection;
		
		try {
			createTable = connection.createStatement();
			
			boolean tableExists = false;
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("person")){
					tableExists=true;
					break;
				}
			}
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
			
			insert = connection.prepareStatement(insertSql);
			delete = connection.prepareStatement(deleteSql);	
			update = connection.prepareStatement(updateSql);	
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}


	public void delete(Person p){
		try{
			delete.setInt(1, p.getId());
			delete.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void add(Person p){
		try{
			
			insert.setString(1, p.getName());
			insert.setString(2, p.getSurname());
			insert.executeUpdate();
			
		}catch(SQLException ex){
			ex.printStackTrace();
		}
		
	}
	
	public void update(Person p){
		try{
			
			update.setString(1, p.getName());
			update.setString(2, p.getSurname());
			update.executeUpdate();
			
		}catch(SQLException ex){
			ex.printStackTrace();
		}
		
	}
	
	
	
	
	
	
	
	
	
}
